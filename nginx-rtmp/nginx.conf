worker_processes auto;
error_log /dev/stderr info;
rtmp_auto_push on;

events {
    worker_connections 1024;
}

rtmp {
    server {
        listen 1935;
        listen [::]:1935 ipv6only=on;

        chunk_size 4000;

        application live {
            live on;
            notify_update_timeout 10s;

            # HTTP callback when a stream starts publishing
            # Should return 2xx to allow, 3xx to redirect, anything else to deny.
            # Muxy will redirect to main or test depending if the stream is valid or not.
            on_publish http://muxy:8000/rtmp/on-publish/;

            # Called when a stream stops publishing.  Response is ignored.
            on_publish_done http://muxy:8000/rtmp/on-publish-done/;

            # Called with a period of notify_update_timeout
            on_update http://muxy:8000/rtmp/on-update/;

            # Disable consuming the stream from nginx as RTMP
            deny play all;
        }

        application test {
            live on;

            allow publish 127.0.0.1;
            deny publish all;

            allow play 127.0.0.1;
            deny play all;

            # push rtmp://localhost:1935/test-hls/stream;
            exec_push ffmpeg -i rtmp://localhost:1935/$app/$name
                -c:a aac -b:a 32k  -c:v libx264 -b:v 128K -f flv rtmp://localhost:1935/$app-hls/stream_low
                -c:a aac -b:a 64k  -c:v libx264 -b:v 256k -f flv rtmp://localhost:1935/$app-hls/stream_mid
                -c:a aac -b:a 128k -c:v libx264 -b:v 512K -f flv rtmp://localhost:1935/$app-hls/stream_hi
                2>>/mnt/log/ffmpeg-$app-$name.log;
        }

        application test-hls {
            live on;

            allow publish 127.0.0.1;
            deny publish all;

            hls on;
            hls_path /mnt/hls/test;
            hls_fragment 3;
            hls_playlist_length 15;
            hls_nested on;
            hls_variant _low BANDWIDTH=160000;
            hls_variant _mid BANDWIDTH=320000;
            hls_variant _hi  BANDWIDTH=640000;
        }

        application main {
            live on;

            allow publish 127.0.0.1;
            deny publish all;

            allow play 127.0.0.1;
            deny play all;

            record all;
            record_path /recordings;
            record_unique on;

            # push rtmp://localhost:1935/main-hls/stream;
            exec_push ffmpeg -i rtmp://localhost:1935/$app/$name
                -c:a aac -b:a 32k  -c:v libx264 -b:v 128K -f flv rtmp://localhost:1935/$app-hls/stream_low
                -c:a aac -b:a 64k  -c:v libx264 -b:v 256k -f flv rtmp://localhost:1935/$app-hls/stream_mid
                -c:a aac -b:a 128k -c:v libx264 -b:v 512K -f flv rtmp://localhost:1935/$app-hls/stream_hi
                2>>/mnt/log/ffmpeg-$app-$name.log;
        }

        application main-hls {
            live on;

            allow publish 127.0.0.1;
            deny publish all;

            hls on;
            hls_path /mnt/hls/main;
            hls_fragment 3;
            hls_playlist_length 60;
            hls_nested on;
            hls_variant _low BANDWIDTH=160000;
            hls_variant _mid BANDWIDTH=320000;
            hls_variant _hi  BANDWIDTH=640000;
        }
    }
}

http {
    sendfile off;
    tcp_nopush on;
    # aio on;
    directio 512;
    default_type application/octet-stream;

    server {
        listen 8080;

        location / {
            # Disable cache
            add_header 'Cache-Control' 'no-cache';

            # CORS setup
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length';

            # allow CORS preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            types {
                application/dash+xml mpd;
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }

            root /mnt/;
        }
    }
}

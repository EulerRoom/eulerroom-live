worker_processes auto;
error_log /dev/stderr info;
rtmp_auto_push on;

events {
    worker_connections 1024;
}

rtmp {
    server {
        listen 1935;
        listen [::]:1935 ipv6only=on;

        chunk_size 4000;

        application live {
            live on;
            notify_update_timeout 10s;

            # HTTP callback when a stream starts publishing
            # Should return 2xx to allow, 3xx to redirect, anything else to deny.
            # Muxy will redirect to main or test depending if the stream is valid or not.
            on_publish http://muxy:8000/rtmp/on-publish/;

            # Called when a stream stops publishing.  Response is ignored.
            on_publish_done http://muxy:8000/rtmp/on-publish-done/;

            # Called with a period of notify_update_timeout
            on_update http://muxy:8000/rtmp/on-update/;

            #push rtmp://localhost:1935/test;

            # Disable consuming the stream from nginx as RTMP
            deny play all;
        }

        application main {
            live on;

            allow publish 127.0.0.1;
            deny publish all;

            deny play all;

            record all;
            record_path /recordings;
            record_unique on;

            push rtmp://main-owncast:1935/live/${MAIN_STREAM_KEY};
        }

        application test {
            live on;

            allow publish 127.0.0.1;
            deny publish all;

            deny play all;

            push rtmp://test-owncast:1935/live/${TEST_STREAM_KEY};
        }
    }
}

http {
    sendfile off;
    tcp_nopush on;
    # aio on;
    directio 512;
    default_type application/octet-stream;

    server {
        listen 8080;

        # This URL provides RTMP statistics in XML
        location /stat {
            rtmp_stat all;

            # Use this stylesheet to view XML as web page
            # in browser
            rtmp_stat_stylesheet stat.xsl;
        }

        location /stat.xsl {
            # XML stylesheet to view RTMP stats.
            # Copy stat.xsl wherever you want
            # and put the full directory path here
            root /usr/local/nginx/html;
        }
    }
}
